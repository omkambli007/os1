#include <stdio.h>

struct process {
    int allocation[3];
    int max[3];
    int need[3];
    int finish;
};

int main() {
    int n, i, j, avail[3], work[3], sequence[10], k = 0;
    struct process p[10];

    printf("\nEnter the number of processes: ");
    scanf("%d", &n);

    for (i = 0; i < n; i++) {
        printf("\nEnter the %dth process allocated resources: ", i);
        scanf("%d%d%d", &p[i].allocation[0], &p[i].allocation[1], &p[i].allocation[2]);

        printf("Enter the %dth process maximum resources: ", i);
        scanf("%d%d%d", &p[i].max[0], &p[i].max[1], &p[i].max[2]);

        p[i].finish = 0;
        for (j = 0; j < 3; j++) {
            p[i].need[j] = p[i].max[j] - p[i].allocation[j];
        }
    }

    printf("\nEnter the available vector: ");
    scanf("%d%d%d", &avail[0], &avail[1], &avail[2]);

    for (i = 0; i < 3; i++) {
        work[i] = avail[i];
    }

    int done = 0;
    while (done < n) {
        int progress = 0;
        for (i = 0; i < n; i++) {
            if (p[i].finish == 0 &&
                p[i].need[0] <= work[0] &&
                p[i].need[1] <= work[1] &&
                p[i].need[2] <= work[2]) {
                for (j = 0; j < 3; j++) {
                    work[j] += p[i].allocation[j];
                }
                p[i].finish = 1;
                sequence[k++] = i;
                progress = 1;
                done++;
            }
        }
        if (progress == 0) {
            break;
        }
    }

    printf("\nThe safe sequence is:\t");
    if (done == n) {
        for (i = 0; i < k; i++) {
            printf("P%d ", sequence[i]);
        }
        printf("\n");
    } else {
        printf("SYSTEM IS NOT IN A SAFE STATE\n\n");
    }

    return 0;
}
